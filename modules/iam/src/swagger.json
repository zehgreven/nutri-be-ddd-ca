{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Nutri BE API",
    "description": "API for Nutri BE"
  },
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and authorization"
    },
    {
      "name": "Functionalities",
      "description": "Functionalities management"
    },
    {
      "name": "FunctionalityTypes",
      "description": "FunctionalityTypes management"
    },
    {
      "name": "Profile",
      "description": "Profile management"
    },
    {
      "name": "Account",
      "description": "Account management"
    }
  ],
  "paths": {
    "/auth/v1/authenticate": {
      "post": {
        "summary": "Sign in",
        "description": "Sign in to the application",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sign in successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/v1/refresh": {
      "post": {
        "summary": "Refresh token",
        "description": "Refresh the JWT token",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Refresh token successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/functionalities/v1": {
      "post": {
        "summary": "Create functionality",
        "description": "Create a functionality",
        "tags": ["Functionalities"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            }
          },
          "Authorization": {
            "schema": {
              "type": "string"
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionalityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create functionality successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "List functionalities",
        "tags": ["Functionalities"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of results",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the functionality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the functionality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "Path of the functionality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Active status of the functionality",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the functionality",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List functionalities successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFunctionalityResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/functionalities/v1/{id}": {
      "get": {
        "summary": "Get functionality by id",
        "description": "Get functionality by id",
        "tags": ["Functionalities"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the functionality",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get functionality by id successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFunctionalityByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Functionality not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update functionality",
        "tags": ["Functionalities"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the functionality",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionalityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update functionality successful"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Functionality not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete functionality",
        "tags": ["Functionalities"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the functionality",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete functionality successful"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Functionality not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/functionality-types/v1": {
      "post": {
        "summary": "Create functionality-type",
        "description": "Create a functionality-type",
        "tags": ["FunctionalityTypes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            }
          },
          "Authorization": {
            "schema": {
              "type": "string"
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NameDescriptionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create functionality-type successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "List functionality-types",
        "tags": ["FunctionalityTypes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of results",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the functionality-type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the functionality-type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Active status of the functionality-type",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the functionality-type",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List functionality-types successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFunctionalityTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/functionality-types/v1/{id}": {
      "get": {
        "summary": "Get functionality-type by id",
        "description": "Get functionality-type by id",
        "tags": ["FunctionalityTypes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the functionality-type",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get functionality-type by id successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionalityType"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "FunctionalityType not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update functionality-type",
        "tags": ["FunctionalityTypes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the functionality-type",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionalityTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update functionality-type successful"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "FunctionalityType not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete functionality-type",
        "tags": ["FunctionalityTypes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the functionality-type",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete functionality-type successful"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "FunctionalityType not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/profiles/v1": {
      "post": {
        "tags": ["Profile"],
        "summary": "Create a profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NameDescriptionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profile created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/profiles/v1/{profileId}": {
      "patch": {
        "tags": ["Profile"],
        "summary": "Update a profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated"
          },
          "404": {
            "description": "Profile not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": ["Profile"],
        "summary": "Delete a profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Profile deleted"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/profiles/v1/{profileId}/functionality/{functionalityId}": {
      "post": {
        "tags": ["Profile"],
        "summary": "Assign a functionality to a profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionalityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Functionality assigned"
          },
          "404": {
            "description": "Profile or Functionality not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": ["Profile"],
        "summary": "Unassign a functionality from a profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionalityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Functionality unassigned"
          },
          "404": {
            "description": "Profile or Functionality not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["Profile"],
        "summary": "Grant or revoke a functionality to a profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionalityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Functionality granted or revoked"
          },
          "404": {
            "description": "Profile or Functionality not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/accounts/v1": {
      "post": {
        "tags": ["Account"],
        "summary": "Sign up",
        "description": "Create a new account",
        "security": [
          {
            "bearerAuth": {}
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Account"],
        "summary": "List accounts",
        "description": "List all accounts",
        "security": [
          {
            "bearerAuth": {}
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of results",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username of the account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Active status of the account",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the account",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAccountsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/v1/me": {
      "get": {
        "tags": ["Account"],
        "summary": "Get authenticated account",
        "description": "Get the authenticated account",
        "security": [
          {
            "bearerAuth": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Authenticated account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Account"],
        "summary": "Delete authenticated account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Account deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/v1/{accountId}": {
      "get": {
        "tags": ["Account"],
        "summary": "Get account by id",
        "description": "Get the account by id",
        "security": [
          {
            "bearerAuth": {}
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the account",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Account"],
        "summary": "Delete account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/v1/permissions": {
      "get": {
        "tags": ["Account"],
        "summary": "Get account permissions",
        "description": "Get the account permissions",
        "security": [
          {
            "bearerAuth": {}
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "ID of the account",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "functionalityId",
            "in": "query",
            "description": "ID of the functionality",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAccountPermissionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/accounts/v1/password": {
      "patch": {
        "tags": ["Account"],
        "summary": "Change password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/accounts/v1/{accountId}/activate": {
      "patch": {
        "tags": ["Account"],
        "summary": "Activate account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account activated successfully"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/accounts/v1/{accountId}/deactivate": {
      "patch": {
        "tags": ["Account"],
        "summary": "Deactivate account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account deactivated successfully"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/accounts/v1/{accountId}/reset-password": {
      "patch": {
        "tags": ["Account"],
        "summary": "Reset password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/accounts/v1/{accountId}/profile/{profileId}": {
      "post": {
        "tags": ["Account"],
        "summary": "Assign profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Profile assigned successfully"
          },
          "404": {
            "description": "Account or Profile not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": ["Account"],
        "summary": "Unassign profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Profile unassigned successfully"
          },
          "404": {
            "description": "Account or Profile not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/accounts/v1/{accountId}/functionality/{functionalityId}": {
      "post": {
        "tags": ["Account"],
        "summary": "Assign account permission",
        "operationId": "assignPermission",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionalityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission assigned successfully"
          },
          "404": {
            "description": "Account or Functionality not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": ["Account"],
        "summary": "Unassign account permission",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionalityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Permission unassigned successfully"
          },
          "404": {
            "description": "Account or Functionality not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["Account"],
        "summary": "Grant and revoke account permission",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionalityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission granted or revoked successfully"
          },
          "404": {
            "description": "Account or Functionality not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT Authorization header using the Bearer scheme.",
        "in": "header",
        "name": "Authorization",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SignInRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["username", "password"]
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "required": ["token", "refreshToken"]
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": ["token"]
      },
      "CreateFunctionalityRequest": {
        "type": "object",
        "properties": {
          "functionalityTypeId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "required": ["functionalityTypeId", "name"]
      },
      "Functionality": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "path": { "type": "string" },
          "active": { "type": "boolean" }
        }
      },
      "ListFunctionalityResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Actual page number"
          },
          "limit": {
            "type": "integer",
            "description": "Max number of results per page"
          },
          "count": {
            "type": "integer",
            "description": "Total number of functionalities"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Functionality"
            }
          }
        }
      },
      "ListFunctionalityTypeResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Actual page number"
          },
          "limit": {
            "type": "integer",
            "description": "Max number of results per page"
          },
          "count": {
            "type": "integer",
            "description": "Total number of functionalities"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunctionalityType"
            }
          }
        }
      },
      "GetFunctionalityByIdResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "path": { "type": "string" },
          "active": { "type": "boolean" },
          "functionalityType": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "active": { "type": "boolean" }
            }
          }
        },
        "required": ["id", "name", "description", "path", "active", "functionalityType"]
      },
      "IdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": ["id"]
      },
      "UpdateFunctionalityRequest": {
        "type": "object",
        "properties": {
          "functionalityTypeId": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "path": { "type": "string" },
          "active": { "type": "boolean" }
        }
      },
      "UpdateFunctionalityTypeRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "active": { "type": "boolean" }
        }
      },
      "NameDescriptionRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" }
        },
        "required": ["name"]
      },
      "FunctionalityType": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "active": { "type": "boolean" }
        }
      },
      "PatchProfile": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "active": { "type": "boolean" }
        },
        "required": ["name"]
      },
      "CreateAccountRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["username", "password"]
      },
      "ListAccountsResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Actual page number"
          },
          "limit": {
            "type": "integer",
            "description": "Max number of results per page"
          },
          "count": {
            "type": "integer",
            "description": "Total number of functionalities"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "username": { "type": "string" },
          "active": { "type": "boolean" }
        }
      },
      "GetAccountByIdResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "username": { "type": "string" },
          "password": { "type": "string" },
          "active": { "type": "boolean" },
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAccountByIdResponseProfile"
            }
          }
        }
      },
      "GetAccountByIdResponseProfile": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "active": { "type": "boolean" }
        }
      },
      "ListAccountPermissionResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ListAccountPermission"
        }
      },
      "ListAccountPermission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "allow": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "account": {
            "$ref": "#/components/schemas/AccountPermissionAccount"
          },
          "functionality": {
            "$ref": "#/components/schemas/AccountPermissionFunctionality"
          }
        },
        "required": ["id", "allow", "active", "account", "functionality"]
      },
      "AccountPermissionAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": ["id", "username"]
      },
      "AccountPermissionFunctionality": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "functionalityType": {
            "$ref": "#/components/schemas/AccountPermissionFunctionalityType"
          }
        },
        "required": ["id", "name", "functionalityType"]
      },
      "AccountPermissionFunctionalityType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["id", "name"]
      }
    }
  }
}
